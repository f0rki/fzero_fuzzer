{
  "<start>": [["<PROGRAM>"]],
  "<PROGRAM>": [["<STATEMENT>", "\n", "<PROGRAM>"], ["<STATEMENT>", "\n"]],
  "<STATEMENT>": [
    [";"],
    ["break"],
    ["<VAR>", " = ", "<EXPR>", ";"],
    ["local ", "<VARLIST>", " = ", "<EXPRLIST>", ";"],
    ["<FUNCTION>", "\n"],
    ["<COROUTINE>", "\n"],
    ["<CONDITIONAL>", "\n"],
    ["<LOOP>", "\n"],
    ["return ", "<EXPRLIST>", ";"],
    ["goto ", "<LABELNAME>", ";"],
    ["::", "<LABELNAME>", "::"]
  ],
  "<LABELNAME>": [["labela"], ["labelb"], ["labelc"]],
  "<FUNCTION>": [["<FUNCDEF>", " (", "<FUNCTION_ARGS>", ") ", "<PROGRAM>", "\nend\n"]],
  "<FUNCDEF>": [
    ["function ", "<VAR>", ".", "<IDENTIFIER>"],
    ["function ", "<VAR>", ":", "<IDENTIFIER>"],
    ["function ", "<IDENTIFIER>"]
  ],
  "<LAMBDA>": [["function (", "<FUNCTION_ARGS>", ") ", "<PROGRAM>", "\nend\n"]],
  "<FUNCTION_ARGS>": [[], ["<FUNCTION_ARGLIST>"]],
  "<FUNCTION_ARGLIST>": [["<VAR>", ", ", "<FUNCTION_ARGLIST>"], ["<VAR>"], ["..."]],
  "<COROUTINE>": [
    ["<VAR>", " = coroutine.create(", "<LAMBDA>", ")"],
    ["<VAR>", " = coroutine.wrap(", "<LAMBDA>", ")"],
    ["coroutine.resume(", "<VAR>", ", ", "<ARGS>", ")"],
    ["coroutine.yield(", "<ARGS>", ")"]
  ],
  "<FUNCTIONCALL>": [
    ["<IDENTIFIER>", " ", "<ARGS>"],
    ["<EXPR>", ":", "<IDENTIFIER>", " ", "<ARGS>"],
    ["<EXPR>", ".", "<IDENTIFIER>", " ", "<ARGS>"]
  ],
  "<ARGS>": [["(", "<EXPRLIST>", ")"], ["<TABLECONSTRUCTOR>"], ["<LITERALSTRING>"]],
  "<CONDITIONAL>": [
    ["if ", "<EXPR>", " then\n", "<PROGRAM>", "\nend\n"],
    ["if ", "<EXPR>", " then\n", "<PROGRAM>", "\nelse\n", "<PROGRAM>", "\nend\n"]
  ],
  "<LOOP>": [
    ["while (", "<EXPR>", ")\ndo\n", "<PROGRAM>", "\nend\n"],
    ["for ", "<VAR>", "=", "<EXPR>", ", ", "<EXPR>", ", ", "<EXPR>", "\ndo\n", "<PROGRAM>", "\nend\n"],
    ["repeat\n", "<PROGRAM>", "\nuntil (", "<EXPR>", ")"]
  ],
  "<EXPRLIST>": [["<EXPR>", ", ", "<EXPRLIST>"], ["<EXPR>"]],
  "<EXPR>": [
    ["(nil)"],
    ["(false)"],
    ["(true)"],
    ["(", "<NUMERAL>", ")"],
    ["<LITERALSTRING>"],
    ["<TABLECONSTRUCTOR>"],
    ["(", "<VAR>", "[", "<EXPR>", "])"],
    ["(", "<EXPR>", "<BINOP>", "<EXPR>", ")"],
    ["(", "<UNOP>", "<EXPR>", ")"],
    ["<LAMBDA>"],
    ["<VAR>"],
    ["<FUNCTIONCALL>"],
    ["(", "<EXPR>", ")"],
    ["..."]
  ],
  "<BINOP>": [
    ["+"],
    ["-"],
    ["*"],
    ["/"],
    ["//"],
    ["^"],
    ["%"],
    ["&"],
    ["~"],
    ["|"],
    [">>"],
    ["<<"],
    [" .. "],
    ["<"],
    ["<="],
    [">"],
    [">="],
    ["=="],
    ["~="],
    [" and "],
    [" or "]
  ],
  "<UNOP>": [["-"], [" not "], ["#"], ["~"]],
  "<TABLECONSTRUCTOR>": [["\\{", "<FIELDLIST>", "\\}"]],
  "<METATABLE>": [["<VAR>", " = setmetatable(", "<VAR>", ", ", "<TABLECONSTRUCTOR>", ")"]],
  "<FIELDLIST>": [["<FIELD>", ",", "<FIELDLIST>"], ["<FIELD>"]],
  "<FIELD>": [["[", "<EXPR>", "]=", "<EXPR>"], ["<IDENTIFIER>", "=", "<EXPR>"], ["<EXPR>"]],
  "<VARLIST>": [["<VAR>", ", ", "<VARLIST>"], ["<VAR>"]],
  "<VAR>": [
    ["a"],
    ["b"],
    ["c"],
    ["d"],
    ["e"],
    ["f"],
    ["g"],
    ["h"],
    ["coroutine"],
    ["debug"],
    ["math"],
    ["io"],
    ["os"],
    ["package"],
    ["string"],
    ["table"],
    ["utf8"],
    ["self"]
  ],
  "<LITERALSTRING>": [["\"", "<STRING>", "\""], ["[[", "<STRING>", "]]"]],
  "<STRING>": [[], ["<STRCHR>", "<STRING>"]],
  "<STRCHR>": [["\n"], ["\r"], [" "], ["\t"], ["0"], ["a"], ["/"], ["."], ["$"], ["<ESCAPESEQUENCE>"]],
  "<ESCAPESEQUENCE>": [
    ["\\a"],
    ["\\b"],
    ["\\f"],
    ["\\n"],
    ["\\r"],
    ["\\t"],
    ["\\v"],
    ["\\z"],
    ["\n"],
    ["\\x", "<HEXADECIMAL>"],
    ["\\u\\{", "<HEXADECIMAL>", "\\}"]
  ],
  "<NUMERAL>": [
    ["<DECIMAL>"],
    ["0x", "<HEXADECIMAL>"],
    ["0"],
    ["1/2"],
    ["1E2"],
    ["1E02"],
    ["1E+02"],
    ["-1"],
    ["-1.00"],
    ["-1/2"],
    ["-1E2"],
    ["-1E02"],
    ["-1E+02"],
    ["1E-02"],
    ["10E-02"],
    ["1/0"],
    ["0/0"],
    ["-2147483648/-1"],
    ["-9223372036854775808/-1"],
    ["-0"],
    ["-0.0"],
    ["+0"],
    ["255"],
    ["256"],
    ["100000000000000000000000000000000"],
    ["0xffffffff"],
    ["0x00000000"],
    ["0xffffffffffffffff"],
    ["0x0000000000000000"],
    ["256"],
    ["255"],
    ["257"],
    ["128"],
    ["65536"],
    ["65535"],
    ["65537"],
    ["32768"],
    ["4294967296"],
    ["4294967295"],
    ["4294967297"],
    ["2147483648"],
    ["18446744073709551616"],
    ["18446744073709551615"],
    ["18446744073709551617"],
    ["9223372036854775808"],
    ["340282366920938463463374607431768211456"],
    ["340282366920938463463374607431768211455"],
    ["340282366920938463463374607431768211457"],
    ["170141183460469231731687303715884105728"]
  ],
  "<DECIMAL>": [
    ["<DECIMALDIGIT>", "<DECIMALDIGITS>"],
    ["<DECIMALDIGIT>", "<DECIMALDIGITS>", "e", "<DECIMALDIGIT>", "<DECIMALDIGITS>"],
    ["<DECIMALDIGIT>", "<DECIMALDIGITS>", "e-", "<DECIMALDIGIT>", "<DECIMALDIGITS>"],
    ["<DECIMALDIGIT>", "<DECIMALDIGITS>", ".", "<DECIMALDIGIT>", "<DECIMALDIGITS>"],
    [
      "<DECIMALDIGIT>",
      "<DECIMALDIGITS>",
      ".",
      "<DECIMALDIGIT>",
      "<DECIMALDIGITS>",
      "e",
      "<DECIMALDIGIT>",
      "<DECIMALDIGITS>"
    ],
    [
      "<DECIMALDIGIT>",
      "<DECIMALDIGITS>",
      ".",
      "<DECIMALDIGIT>",
      "<DECIMALDIGITS>",
      "e-",
      "<DECIMALDIGIT>",
      "<DECIMALDIGITS>"
    ]
  ],
  "<HEXADECIMAL>": [
    ["<HEXDIGIT>", "<HEXDIGITS>"],
    ["<HEXDIGIT>", "<HEXDIGITS>", "p", "<HEXDIGIT>", "<HEXDIGITS>"],
    ["<HEXDIGIT>", "<HEXDIGITS>", "p-", "<HEXDIGIT>", "<HEXDIGITS>"],
    ["<HEXDIGIT>", "<HEXDIGITS>", ".", "<HEXDIGIT>", "<HEXDIGITS>"],
    ["<HEXDIGIT>", "<HEXDIGITS>", ".", "<HEXDIGIT>", "<HEXDIGITS>", "p", "<HEXDIGIT>", "<HEXDIGITS>"],
    ["<HEXDIGIT>", "<HEXDIGITS>", ".", "<HEXDIGIT>", "<HEXDIGITS>", "p-", "<HEXDIGIT>", "<HEXDIGITS>"]
  ],
  "<DECIMALDIGITS>": [["<DECIMALDIGIT>", "<DECIMALDIGITS>"], []],
  "<HEXDIGITS>": [["<HEXDIGIT>", "<HEXDIGITS>"], []],
  "<DECIMALDIGIT>": [["0"], ["1"], ["2"], ["3"], ["4"], ["5"], ["6"], ["7"], ["8"], ["9"]],
  "<HEXDIGIT>": [
    ["a"],
    ["b"],
    ["c"],
    ["d"],
    ["e"],
    ["f"],
    ["A"],
    ["B"],
    ["C"],
    ["D"],
    ["E"],
    ["F"],
    ["<DECIMALDIGIT>"]
  ],
  "<IDENTIFIER>": [
    ["a"],
    ["b"],
    ["c"],
    ["d"],
    ["e"],
    ["f"],
    ["g"],
    ["h"],
    ["fa"],
    ["fb"],
    ["fc"],
    ["fd"],
    ["self"],
    ["G"],
    ["_VERSION"],
    ["assert"],
    ["collectgarbage"],
    ["dofile"],
    ["error"],
    ["getmetatable"],
    ["ipairs"],
    ["load"],
    ["loadfile"],
    ["next"],
    ["pairs"],
    ["pcall"],
    ["print"],
    ["rawequal"],
    ["rawget"],
    ["rawlen"],
    ["rawset"],
    ["require"],
    ["select"],
    ["setmetatable"],
    ["tonumber"],
    ["tostring"],
    ["type"],
    ["xpcall"],
    ["coroutine"],
    ["create"],
    ["isyieldable"],
    ["resume"],
    ["running"],
    ["status"],
    ["wrap"],
    ["yield"],
    ["debug"],
    ["debug"],
    ["gethook"],
    ["getinfo"],
    ["getlocal"],
    ["getmetatable"],
    ["getregistry"],
    ["getupvalue"],
    ["getuservalue"],
    ["sethook"],
    ["setlocal"],
    ["setmetatable"],
    ["setupvalue"],
    ["setuservalue"],
    ["traceback"],
    ["upvalueid"],
    ["upvaluejoin"],
    ["io"],
    ["close"],
    ["flush"],
    ["input"],
    ["lines"],
    ["open"],
    ["output"],
    ["popen"],
    ["read"],
    ["stderr"],
    ["stdin"],
    ["stdout"],
    ["tmpfile"],
    ["type"],
    ["write"],
    ["math"],
    ["abs"],
    ["acos"],
    ["asin"],
    ["atan"],
    ["ceil"],
    ["cos"],
    ["deg"],
    ["exp"],
    ["floor"],
    ["fmod"],
    ["huge"],
    ["log"],
    ["max"],
    ["maxinteger"],
    ["min"],
    ["mininteger"],
    ["modf"],
    ["pi"],
    ["rad"],
    ["random"],
    ["randomseed"],
    ["sin"],
    ["sqrt"],
    ["tan"],
    ["tointeger"],
    ["type"],
    ["ult"],
    ["os"],
    ["clock"],
    ["date"],
    ["difftime"],
    ["exit"],
    ["getenv"],
    ["remove"],
    ["rename"],
    ["setlocale"],
    ["time"],
    ["tmpname"],
    ["package"],
    ["config"],
    ["cpath"],
    ["loaded"],
    ["loadlib"],
    ["path"],
    ["preload"],
    ["searchers"],
    ["searchpath"],
    ["string"],
    ["byte"],
    ["char"],
    ["dump"],
    ["find"],
    ["format"],
    ["gmatch"],
    ["gsub"],
    ["len"],
    ["lower"],
    ["match"],
    ["pack"],
    ["packsize"],
    ["rep"],
    ["reverse"],
    ["sub"],
    ["unpack"],
    ["upper"],
    ["table"],
    ["concat"],
    ["insert"],
    ["move"],
    ["pack"],
    ["remove"],
    ["sort"],
    ["unpack"],
    ["utf8"],
    ["char"],
    ["charpattern"],
    ["codepoint"],
    ["codes"],
    ["len"],
    ["offset"],
    ["create"],
    ["isyieldable"],
    ["resume"],
    ["running"],
    ["status"],
    ["wrap"],
    ["yield"],
    ["debug"],
    ["gethook"],
    ["getinfo"],
    ["getlocal"],
    ["getmetatable"],
    ["getregistry"],
    ["getupvalue"],
    ["getuservalue"],
    ["sethook"],
    ["setlocal"],
    ["setmetatable"],
    ["setupvalue"],
    ["setuservalue"],
    ["traceback"],
    ["upvalueid"],
    ["upvaluejoin"],
    ["close"],
    ["flush"],
    ["input"],
    ["lines"],
    ["open"],
    ["output"],
    ["popen"],
    ["read"],
    ["stderr"],
    ["stdin"],
    ["stdout"],
    ["tmpfile"],
    ["type"],
    ["write"],
    ["close"],
    ["flush"],
    ["lines"],
    ["read"],
    ["seek"],
    ["setvbuf"],
    ["write"],
    ["abs"],
    ["acos"],
    ["asin"],
    ["atan"],
    ["ceil"],
    ["cos"],
    ["deg"],
    ["exp"],
    ["floor"],
    ["fmod"],
    ["huge"],
    ["log"],
    ["max"],
    ["maxinteger"],
    ["min"],
    ["mininteger"],
    ["modf"],
    ["pi"],
    ["rad"],
    ["random"],
    ["randomseed"],
    ["sin"],
    ["sqrt"],
    ["tan"],
    ["tointeger"],
    ["type"],
    ["ult"],
    ["clock"],
    ["date"],
    ["difftime"],
    ["exit"],
    ["getenv"],
    ["remove"],
    ["rename"],
    ["setlocale"],
    ["time"],
    ["tmpname"],
    ["config"],
    ["cpath"],
    ["loaded"],
    ["loadlib"],
    ["path"],
    ["preload"],
    ["searchers"],
    ["searchpath"],
    ["byte"],
    ["char"],
    ["dump"],
    ["find"],
    ["format"],
    ["gmatch"],
    ["gsub"],
    ["len"],
    ["lower"],
    ["match"],
    ["pack"],
    ["packsize"],
    ["rep"],
    ["reverse"],
    ["sub"],
    ["unpack"],
    ["upper"],
    ["concat"],
    ["insert"],
    ["move"],
    ["pack"],
    ["remove"],
    ["sort"],
    ["unpack"],
    ["char"],
    ["charpattern"],
    ["codepoint"],
    ["codes"],
    ["len"],
    ["offset"],
    ["__index"],
    ["__newindex"],
    ["__add"],
    ["__sub"],
    ["__mul"],
    ["__div"],
    ["__mod"],
    ["__unm"],
    ["__concat"],
    ["__eq"],
    ["__lt"],
    ["__le"],
    ["__call"],
    ["__tostring"]
  ]
}
